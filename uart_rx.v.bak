module uart_rx(
    input wire clk,
    input wire rst,
    input wire rx,
    output reg [7:0] rx_data,
    output reg rx_done
);
    parameter CLK_FREQ = 50000000;
    parameter BAUD_RATE = 9600;
    localparam CLKS_PER_BIT = CLK_FREQ / BAUD_RATE;

    reg [15:0] clk_count = 0;
    reg [3:0] bit_index = 0;
    reg [7:0] rx_shift = 0;
    reg rx_active = 0;
    reg rx_d1 = 1, rx_d2 = 1;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            rx_done <= 0;
            rx_data <= 0;
            rx_active <= 0;
            clk_count <= 0;
            bit_index <= 0;
        end else begin
            rx_d1 <= rx;
            rx_d2 <= rx_d1;

            if (!rx_active && rx_d2 == 0) begin  // Start bit
                rx_active <= 1;
                clk_count <= CLKS_PER_BIT / 2;
                bit_index <= 0;
                rx_done <= 0;
            end

            if (rx_active) begin
                if (clk_count == CLKS_PER_BIT - 1) begin
                    clk_count <= 0;

                    if (bit_index < 8) begin
                        rx_shift[bit_index] <= rx_d2;
                        bit_index <= bit_index + 1;
                    end else begin
                        rx_active <= 0;
                        rx_data <= rx_shift;
                        rx_done <= 1;
                    end
                end else begin
                    clk_count <= clk_count + 1;
                end
            end else begin
                rx_done <= 0;
            end
        end
    end
endmodule
